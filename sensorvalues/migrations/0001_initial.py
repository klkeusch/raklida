# Generated by Django 3.2.7 on 2021-09-16 17:40

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Datapoints',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('unit', models.CharField(max_length=15, verbose_name='Einheit')),
                ('display_name', models.CharField(max_length=50, verbose_name='Anzeigename')),
                ('store_historic_data', models.BooleanField(verbose_name='Messwertaufzeichnung?')),
                ('device_sub_id', models.BigIntegerField(verbose_name='Geräte-Sub-ID')),
                ('current_value_double', models.FloatField(blank=True, null=True, verbose_name='Aktueller Double-Wert')),
                ('current_value_integer', models.BigIntegerField(blank=True, null=True, verbose_name='Aktueller Integer-Wert')),
                ('current_value_string', models.CharField(blank=True, max_length=30, null=True, verbose_name='Aktueller Statuscode')),
                ('last_update', models.DateTimeField(blank=True, null=True, verbose_name='Letztes Update')),
            ],
            options={
                'verbose_name': 'Datapoint',
                'verbose_name_plural': 'Datapoints',
            },
        ),
        migrations.CreateModel(
            name='Devices',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(max_length=30, verbose_name='Standort')),
                ('current_status_code', models.BigIntegerField(verbose_name='Aktueller Statuscode')),
                ('last_status_update', models.TimeField(verbose_name='Letzter Statuscode')),
                ('device_type', models.CharField(blank=True, max_length=30, null=True, verbose_name='Gerätetyp')),
                ('display_name', models.CharField(max_length=50, verbose_name='Anzeigename')),
                ('platform', models.CharField(blank=True, max_length=30, null=True, verbose_name='Geräte-Plattform')),
                ('mac_address', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'verbose_name': 'Device',
                'verbose_name_plural': 'Devices',
            },
        ),
        migrations.CreateModel(
            name='MqttTreeNodes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('is_leaf', models.BooleanField()),
                ('parent_id', models.BigIntegerField()),
            ],
            options={
                'verbose_name': 'MQTT Tree Node',
                'verbose_name_plural': 'MQTT Tree Nodes',
            },
        ),
        migrations.CreateModel(
            name='TreeDatapointTranslations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('datapoint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensorvalues.datapoints')),
                ('mqtt_node', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensorvalues.mqtttreenodes')),
            ],
            options={
                'verbose_name': 'Tree Datapoint Translation',
                'verbose_name_plural': 'Tree Datapoint Translations',
            },
        ),
        migrations.CreateModel(
            name='DeviceUserAssignment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Device-User-Zuordnung',
                'verbose_name_plural': 'Device-User-Zuordnungen',
            },
        ),
        migrations.AddField(
            model_name='datapoints',
            name='device',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensorvalues.devices', verbose_name='Gerät'),
        ),
        migrations.CreateModel(
            name='Data',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(verbose_name='Zeitstempel')),
                ('value_double', models.FloatField(blank=True, null=True, verbose_name='Double-Wert')),
                ('value_integer', models.BigIntegerField(blank=True, null=True, verbose_name='Integer-Wert')),
                ('value_string', models.CharField(blank=True, max_length=100, null=True, verbose_name='Statuscode')),
                ('is_valid', models.BooleanField(verbose_name='Gültig?')),
                ('datapoint', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensorvalues.datapoints', verbose_name='Datenpunkt')),
            ],
            options={
                'verbose_name': 'Data row',
                'verbose_name_plural': 'Data',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='DailyAverages',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('value_night', models.FloatField(blank=True, null=True)),
                ('value_day', models.FloatField(blank=True, null=True)),
                ('value_min', models.FloatField(blank=True, null=True)),
                ('value_max', models.FloatField(blank=True, null=True)),
                ('datapoint_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='sensorvalues.datapoints')),
            ],
            options={
                'verbose_name': 'Daily average',
                'verbose_name_plural': 'Daily averages',
            },
        ),
    ]
