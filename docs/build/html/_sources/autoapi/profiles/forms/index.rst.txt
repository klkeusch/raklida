:py:mod:`profiles.forms`
========================

.. py:module:: profiles.forms


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   profiles.forms.RegisterForm
   profiles.forms.UserUpdateForm
   profiles.forms.ProfileUpdateForm
   profiles.forms.DeviceChoiceField




.. py:class:: RegisterForm(*args, **kwargs)

   Bases: :py:obj:`django.contrib.auth.forms.UserCreationForm`

   A form that creates a user, with no privileges, from the given username and
   password.

   .. py:class:: Meta

      .. py:attribute:: model
         

         

      .. py:attribute:: fields
         :annotation: = ['email', 'username', 'first_name', 'last_name', 'password1', 'password2']

         


   .. py:attribute:: first_name
      

      

   .. py:attribute:: last_name
      

      

   .. py:attribute:: email
      

      


.. py:class:: UserUpdateForm(data=None, files=None, auto_id='id_%s', prefix=None, initial=None, error_class=ErrorList, label_suffix=None, empty_permitted=False, instance=None, use_required_attribute=None, renderer=None)

   Bases: :py:obj:`django.forms.ModelForm`

   The main implementation of all the Form logic. Note that this class is
   different than Form. See the comments by the Form class for more info. Any
   improvements to the form API should be made to this class, not to the Form
   class.

   .. py:class:: Meta

      .. py:attribute:: model
         

         

      .. py:attribute:: fields
         :annotation: = ['email', 'first_name', 'last_name']

         


   .. py:attribute:: email
      

      

   .. py:attribute:: first_name
      

      

   .. py:attribute:: last_name
      

      


.. py:class:: ProfileUpdateForm(data=None, files=None, auto_id='id_%s', prefix=None, initial=None, error_class=ErrorList, label_suffix=None, empty_permitted=False, instance=None, use_required_attribute=None, renderer=None)

   Bases: :py:obj:`django.forms.ModelForm`

   The main implementation of all the Form logic. Note that this class is
   different than Form. See the comments by the Form class for more info. Any
   improvements to the form API should be made to this class, not to the Form
   class.

   .. py:class:: Meta

      .. py:attribute:: model
         

         

      .. py:attribute:: fields
         :annotation: = ['description', 'user_rooms', 'image']

         


   .. py:attribute:: description
      

      

   .. py:attribute:: user_rooms
      

      

   .. py:attribute:: image
      

      


.. py:class:: DeviceChoiceField(*args, user=None, **kwargs)

   Bases: :py:obj:`django.forms.Form`

   A collection of Fields, plus their associated data.

   .. py:attribute:: devices
      

      


